unit UInterrupts;

//=== Unit for Interrupt Handling for Device atmega328p ==================
//=== This file was generated by LazWizard for AVR.

{$mode objfpc}{$H-}
{$goto on}

INTERFACE

  Procedure InterruptsEnable;
  Procedure InterruptsDisable;

   
IMPLEMENTATION

//--- Enable Interrupts Globally ----------------------------------------------
Procedure InterruptsEnable;assembler;
asm SEI end;

//--- Disable Interrupts Globally ---------------------------------------------
Procedure InterruptsDisable;assembler;
asm CLI end;

//=== Interrupt Service Routines (ISR) ========================================
//=== To use an ISR just uncomment it. It will be registered automatically.
//=== Global interrupts are both automatically disabled when entering the ISR
//===  and enabled when leaving the ISR.
//=== If the following is empty then check device specific file for reference. 

//--- Interrupt 1 External Interrupt Request 0 ---
{Procedure INT0_ISR; Alias: 'INT0_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 2 External Interrupt Request 1 ---
{Procedure INT1_ISR; Alias: 'INT1_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 3 Pin Change Interrupt Request 0 ---
{Procedure PCINT0_ISR; Alias: 'PCINT0_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 4 Pin Change Interrupt Request 0 ---
{Procedure PCINT1_ISR; Alias: 'PCINT1_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 5 Pin Change Interrupt Request 1 ---
{Procedure PCINT2_ISR; Alias: 'PCINT2_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 6 Watchdog Time-out Interrupt ---
{Procedure WDT_ISR; Alias: 'WDT_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 7 Timer/Counter2 Compare Match A ---
{Procedure TIMER2_COMPA_ISR; Alias: 'TIMER2_COMPA_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 8 Timer/Counter2 Compare Match A ---
{Procedure TIMER2_COMPB_ISR; Alias: 'TIMER2_COMPB_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 9 Timer/Counter2 Overflow ---
{Procedure TIMER2_OVF_ISR; Alias: 'TIMER2_OVF_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 10 Timer/Counter1 Capture Event ---
{Procedure TIMER1_CAPT_ISR; Alias: 'TIMER1_CAPT_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 11 Timer/Counter1 Compare Match A ---
{Procedure TIMER1_COMPA_ISR; Alias: 'TIMER1_COMPA_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 12 Timer/Counter1 Compare Match B ---
{Procedure TIMER1_COMPB_ISR; Alias: 'TIMER1_COMPB_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 13 Timer/Counter1 Overflow ---
{Procedure TIMER1_OVF_ISR; Alias: 'TIMER1_OVF_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 14 TimerCounter0 Compare Match A ---
{Procedure TIMER0_COMPA_ISR; Alias: 'TIMER0_COMPA_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 15 TimerCounter0 Compare Match B ---
{Procedure TIMER0_COMPB_ISR; Alias: 'TIMER0_COMPB_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 16 Timer/Couner0 Overflow ---
{Procedure TIMER0_OVF_ISR; Alias: 'TIMER0_OVF_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 17 SPI Serial Transfer Complete ---
{Procedure SPI__STC_ISR; Alias: 'SPI__STC_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 18 USART Rx Complete ---
{Procedure USART__RX_ISR; Alias: 'USART__RX_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 19 USART, Data Register Empty ---
{Procedure USART__UDRE_ISR; Alias: 'USART__UDRE_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 20 USART Tx Complete ---
{Procedure USART__TX_ISR; Alias: 'USART__TX_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 21 ADC Conversion Complete ---
{Procedure ADC_ISR; Alias: 'ADC_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 22 EEPROM Ready ---
{Procedure EE_READY_ISR; Alias: 'EE_READY_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 23 Analog Comparator ---
{Procedure ANALOG_COMP_ISR; Alias: 'ANALOG_COMP_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 24 Two-wire Serial Interface ---
{Procedure TWI_ISR; Alias: 'TWI_ISR'; Interrupt; Public;
begin

end; }

//--- Interrupt 25 Store Program Memory Read ---
{Procedure SPM_Ready_ISR; Alias: 'SPM_Ready_ISR'; Interrupt; Public;
begin

end; }


end.

